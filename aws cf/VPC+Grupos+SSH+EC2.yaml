AWSTemplateFormatVersion: '2010-09-09'
Description: AWS CloudFormation Template for VPC, Subnets, Security Groups, EC2 Instances, and RDS

Parameters:
  ALUMNO:
    Description: Insert personal name
    Type: String
  DBUsername:
    Description: RDS Wordpress Username
    Type: String
  DBPassword:
    Description: RDS Wordpress Password
    Type: String
  MyIP:
    Description: Your IP address or '0.0.0.0/0' for open access
    Type: String
  KeyName:
    Description: Name of the SSH Key Pair
    Type: String

Resources:
  VPC:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: 10.216.0.0/16
      EnableDnsSupport: true
      EnableDnsHostnames: true
      Tags:
        - Key: Name
          Value: !Sub vpc-mensagl-2025-${ALUMNO}

  SubnetPublic1:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      CidrBlock: 10.216.1.0/24
      AvailabilityZone: !Sub ${AWS::Region}a
      MapPublicIpOnLaunch: true
      Tags:
        - Key: Name
          Value: !Sub ${VPC.Name}-subnet-public1-${AWS::Region}a

  SubnetPublic2:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      CidrBlock: 10.216.2.0/24
      AvailabilityZone: !Sub ${AWS::Region}b
      MapPublicIpOnLaunch: true
      Tags:
        - Key: Name
          Value: !Sub ${VPC.Name}-subnet-public2-${AWS::Region}b

  SubnetPrivate1:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      CidrBlock: 10.216.3.0/24
      AvailabilityZone: !Sub ${AWS::Region}a
      Tags:
        - Key: Name
          Value: !Sub ${VPC.Name}-subnet-private1-${AWS::Region}a

  SubnetPrivate2:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      CidrBlock: 10.216.4.0/24
      AvailabilityZone: !Sub ${AWS::Region}b
      Tags:
        - Key: Name
          Value: !Sub ${VPC.Name}-subnet-private2-${AWS::Region}b

  InternetGateway:
    Type: AWS::EC2::InternetGateway
    Properties:
      Tags:
        - Key: Name
          Value: !Sub ${VPC.Name}-igw

  AttachGateway:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      VpcId: !Ref VPC
      InternetGatewayId: !Ref InternetGateway

  RouteTablePublic:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref VPC
      Tags:
        - Key: Name
          Value: !Sub ${VPC.Name}-rtb-public

  RoutePublic:
    Type: AWS::EC2::Route
    DependsOn: AttachGateway
    Properties:
      RouteTableId: !Ref RouteTablePublic
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId: !Ref InternetGateway

  SubnetRouteTableAssociationPublic1:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref SubnetPublic1
      RouteTableId: !Ref RouteTablePublic

  SubnetRouteTableAssociationPublic2:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref SubnetPublic2
      RouteTableId: !Ref RouteTablePublic

  ElasticIP:
    Type: AWS::EC2::EIP
    Properties:
      Domain: vpc
      Tags:
        - Key: Name
          Value: !Sub ${VPC.Name}-eip-${AWS::Region}a

  NatGateway:
    Type: AWS::EC2::NatGateway
    Properties:
      SubnetId: !Ref SubnetPublic1
      AllocationId: !GetAtt ElasticIP.AllocationId
      Tags:
        - Key: Name
          Value: !Sub ${VPC.Name}-nat-public1-${AWS::Region}a

  RouteTablePrivate1:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref VPC
      Tags:
        - Key: Name
          Value: !Sub ${VPC.Name}-rtb-private1-${AWS::Region}a

  RouteTablePrivate2:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref VPC
      Tags:
        - Key: Name
          Value: !Sub ${VPC.Name}-rtb-private2-${AWS::Region}b

  RoutePrivate1:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId: !Ref RouteTablePrivate1
      DestinationCidrBlock: 0.0.0.0/0
      NatGatewayId: !Ref NatGateway

  RoutePrivate2:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId: !Ref RouteTablePrivate2
      DestinationCidrBlock: 0.0.0.0/0
      NatGatewayId: !Ref NatGateway

  SubnetRouteTableAssociationPrivate1:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref SubnetPrivate1
      RouteTableId: !Ref RouteTablePrivate1

  SubnetRouteTableAssociationPrivate2:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref SubnetPrivate2
      RouteTableId: !Ref RouteTablePrivate2

  SecurityGroupProxy:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupName: Proxy-inverso
      GroupDescription: !Ref DESCRIPTION
      VpcId: !Ref VPC
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 22
          ToPort: 22
          CidrIp: !Ref MyIP
        - IpProtocol: tcp
          FromPort: 80
          ToPort: 80
          CidrIp: !Ref MyIP
        - IpProtocol: tcp
          FromPort: 443
          ToPort: 443
          CidrIp: !Ref MyIP
      Tags:
        - Key: Name
          Value: Proxy-inverso

  SecurityGroupXMPP:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupName: Servidor-Mensajeria
      GroupDescription: !Ref DESCRIPTION
      VpcId: !Ref VPC
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 10000
          ToPort: 10000
          CidrIp: !Ref MyIP
        - IpProtocol: tcp
          FromPort: 5269
          ToPort: 5269
          CidrIp: !Ref MyIP
        - IpProtocol: tcp
          FromPort: 4443
          ToPort: 4443
          CidrIp: !Ref MyIP
        - IpProtocol: tcp
          FromPort: 5281
          ToPort: 5281
          CidrIp: !Ref MyIP
        - IpProtocol: tcp
          FromPort: 5280
          ToPort: 5280
          CidrIp: !Ref MyIP
        - IpProtocol: tcp
          FromPort: 5347
          ToPort: 5347
          CidrIp: !Ref MyIP
        - IpProtocol: tcp
          FromPort: 5222
          ToPort: 5222
          CidrIp: !Ref MyIP
        - IpProtocol: tcp
          FromPort: 80
          ToPort: 80
          CidrIp: !Ref MyIP
        - IpProtocol: tcp
          FromPort: 443
          ToPort: 443
          CidrIp: !Ref MyIP
        - IpProtocol: tcp
          FromPort: 12345
          ToPort: 12345
          CidrIp: !Ref MyIP
        - IpProtocol: tcp
          FromPort: 3306
          ToPort: 3306
          CidrIp: !Ref MyIP
      Tags:
        - Key: Name
          Value: Servidor-Mensajeria

  SecurityGroupMySQL:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupName: Servidor-SGBD
      GroupDescription: !Ref DESCRIPTION
      VpcId: !Ref VPC
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 22
          ToPort: 22
          CidrIp: !Ref MyIP
        - IpProtocol: tcp
          FromPort: 3306
#######SSH KEYS########
Resources:
  SSHKeyPair:
    Type: AWS::EC2::KeyPair
    Properties:
      KeyName: !Ref KeyName
    Metadata:
      'AWS::CloudFormation::Init':
        configSets:
          default:
            - setupKeyPair
        setupKeyPair:
          files:
            "/home/ec2-user/.ssh/${KeyName}.pem":
              content: !GetAtt SSHKeyPair.KeyMaterial
              mode: "000400"
              owner: ec2-user
              group: ec2-user

Outputs:
  SSHKeyPairOutput:
    Description: SSH key pair material
    Value: !GetAtt SSHKeyPair.KeyMaterial
#############EC2###########
Resources:
  EC2Proxy1:
    Type: AWS::EC2::Instance
    Properties:
      InstanceType: t2.micro
      KeyName: !Ref KeyName
      ImageId: ami-04b4f1a9cf54c11d0
      SubnetId: !Ref SubnetPublic1
      SecurityGroupIds: 
        - !Ref SecurityGroupProxy
      PrivateIpAddress: 10.216.1.10
      BlockDeviceMappings:
        - DeviceName: /dev/sda1
          Ebs:
            VolumeSize: 8
            VolumeType: gp3
            DeleteOnTermination: true
      Tags:
        - Key: Name
          Value: PROXY-1

  EC2Proxy2:
    Type: AWS::EC2::Instance
    Properties:
      InstanceType: t2.micro
      KeyName: !Ref KeyName
      ImageId: ami-04b4f1a9cf54c11d0
      SubnetId: !Ref SubnetPublic2
      SecurityGroupIds: 
        - !Ref SecurityGroupProxy
      PrivateIpAddress: 10.216.2.10
      BlockDeviceMappings:
        - DeviceName: /dev/sda1
          Ebs:
            VolumeSize: 8
            VolumeType: gp3
            DeleteOnTermination: true
      Tags:
        - Key: Name
          Value: PROXY-2

  EC2MySQL1:
    Type: AWS::EC2::Instance
    Properties:
      InstanceType: t2.micro
      KeyName: !Ref KeyName
      ImageId: ami-04b4f1a9cf54c11d0
      SubnetId: !Ref SubnetPrivate1
      SecurityGroupIds: 
        - !Ref SecurityGroupMySQL
      PrivateIpAddress: 10.216.3.10
      BlockDeviceMappings:
        - DeviceName: /dev/sda1
          Ebs:
            VolumeSize: 8
            VolumeType: gp3
            DeleteOnTermination: true
      Tags:
        - Key: Name
          Value: MYSQ-1

  EC2MySQL2:
    Type: AWS::EC2::Instance
    Properties:
      InstanceType: t2.micro
      KeyName: !Ref KeyName
      ImageId: ami-04b4f1a9cf54c11d0
      SubnetId: !Ref SubnetPrivate1
      SecurityGroupIds: 
        - !Ref SecurityGroupMySQL
      PrivateIpAddress: 10.216.3.20
      BlockDeviceMappings:
        - DeviceName: /dev/sda1
          Ebs:
            VolumeSize: 8
            VolumeType: gp3
            DeleteOnTermination: true
      Tags:
        - Key: Name
          Value: MYSQ-2

##########RDS#########
Resources:
  RDSSubnetGroup:
    Type: AWS::RDS::DBSubnetGroup
    Properties:
      DBSubnetGroupName: wp-rds-subnet-group
      DBSubnetGroupDescription: RDS Subnet Group for WordPress
      SubnetIds:
        - !Ref SubnetPrivate1
        - !Ref SubnetPrivate2
      Tags:
        - Key: Name
          Value: wp-rds-subnet-group

  SecurityGroupRDS:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Security group for RDS MySQL
      VpcId: !Ref VPC
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 3306
          ToPort: 3306
          CidrIp: 0.0.0.0/0
      Tags:
        - Key: Name
          Value: RDS-MySQL

  RDSInstance:
    Type: AWS::RDS::DBInstance
    Properties:
      DBInstanceIdentifier: wordpress-db
      DBInstanceClass: db.t3.medium
      Engine: mysql
      AllocatedStorage: 20
      StorageType: gp2
      MasterUsername: !Ref DBUsername
      MasterUserPassword: !Ref DBPassword
      DBSubnetGroupName: !Ref RDSSubnetGroup
      VPCSecurityGroups:
        - !Ref SecurityGroupRDS
      BackupRetentionPeriod: 7
      PubliclyAccessible: false
      AvailabilityZone: !Sub ${AWS::Region}a
      MultiAZ: false
      Tags:
        - Key: Name
          Value: wordpress-db
Outputs:
  RDSEndpoint:
    Description: RDS Endpoint
    Value: !GetAtt RDSInstance.Endpoint.Address



  EC2XMPP1:
    Type: AWS::EC2::Instance
    Properties:
      InstanceType: t2.micro
      KeyName: !Ref KeyName
      ImageId: ami-04b4f1a9cf54c11d0
      SubnetId: !Ref SubnetPrivate1
      SecurityGroupIds: 
        - !Ref SecurityGroupXMPP
      PrivateIpAddress: 10.216.3.100
      BlockDeviceMappings:
        - DeviceName: /dev/sda1
          Ebs:
            VolumeSize: 8
            VolumeType: gp3
            DeleteOnTermination: true
      Tags:
        - Key: Name
          Value: XMPP-1

  EC2XMPP2:
    Type: AWS::EC2::Instance
    Properties:
      InstanceType: t2.micro
      KeyName: !Ref KeyName
      ImageId: ami-04b4f1a9cf54c11d0
      SubnetId: !Ref SubnetPrivate1
      SecurityGroupIds: 
        - !Ref SecurityGroupXMPP
      PrivateIpAddress: 10.216.3.200
      BlockDeviceMappings:
        - DeviceName: /dev/sda1
          Ebs:
            VolumeSize: 8
            VolumeType: gp3
            DeleteOnTermination: true
      Tags:
        - Key: Name
          Value: XMPP-2

  EC2Wordpress1:
    Type: AWS::EC2::Instance
    Properties:
      InstanceType: t2.micro
      KeyName: !Ref KeyName
      ImageId: ami-04b4f1a9cf54c11d0
      SubnetId: !Ref SubnetPrivate2
      SecurityGroupIds: 
        - !Ref SecurityGroupWordpress
      PrivateIpAddress: 10.216.4.100
      BlockDeviceMappings:
        - DeviceName: /dev/sda1
          Ebs:
            VolumeSize: 8
            VolumeType: gp3
            DeleteOnTermination: true
      Tags:
        - Key: Name
          Value: WORDPRESS-1

  EC2Wordpress2:
    Type: AWS::EC2::Instance
    Properties:
      InstanceType: t2.micro
      KeyName: !Ref KeyName
      ImageId: ami-04b4f1a9cf54c11d0
      SubnetId: !Ref SubnetPrivate2
      SecurityGroupIds: 
        - !Ref SecurityGroupWordpress
      PrivateIpAddress: 10.216.4.200
      BlockDeviceMappings:
        - DeviceName: /dev/sda1
          Ebs:
            VolumeSize: 8
            VolumeType: gp3
            DeleteOnTermination: true
      Tags:
        - Key: Name
          Value: WORDPRESS-2

